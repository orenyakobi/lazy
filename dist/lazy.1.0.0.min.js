/*! Lazy.JS - v1.0.0 - 2014-07-01
* Lightweight lazy loader for JS, CSS & LESS assets.
* http://orenyakobi.github.io/lazy
*
* Copyright (c) 2014 Oren yakobi <orenykb@gmail.com>;
* Licensed under the MIT license */
var lazy=function(){"use strict";var e={};return{load:function(t,n){function l(e){r.ext=c(e);if(r.ext){r.path=e.split(/\#|\?/)[0];return true}else{return false}}function c(e){var t=e.split(/\#|\?/)[0].split(".").pop();if(!/^\w+$/.test(t)){m("File extension is not specified ( "+e+" )");return false}else{return t}}function h(t){e[r.path]=1;if(r.ext==="less"){p(t)}else{var n=d(r.ext),i=document.createElement(n),s=document.getElementsByTagName("head")[0],o=false;i.src=r.path;s.appendChild(i);i.onload=i.onreadystatechange=function(){if(!o&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){o=true;i.onload=i.onreadystatechange=null;if(s&&i.parentNode){s.removeChild(i)}}}}}function p(e){if(typeof less!=="undefined"){var t=g();t.onreadystatechange=function(){if(t.readyState===4){var n=new less.Parser;n.parse(t.responseText,function(t,n){var i=n.toCSS();if(!document.getElementById("lazyStyle")){var s=document.createElement("style");s.id="lazyStyle";document.getElementsByTagName("head")[0].appendChild(s)}document.getElementById("lazyStyle").innerHTML=document.getElementById("lazyStyle").innerHTML+i;e[r.path]=1})}};t.open("GET",r.path,true);t.send(null)}else{m("Can't load .less file, less.js is missing")}}function d(e){switch(e){case"css":return"link";break;case"js":return"script";break;default:m("Unsupported extension ( "+e+" )")}}function v(){if(typeof n==="function"&&--i===0){n.call()}}function m(e){console.log("~ Lazy Error: "+e)}function g(){if(window.XMLHttpRequest){var e=new XMLHttpRequest}else if(window.ActiveXObject){var e=new ActiveXObject("Microsoft.XMLHTTP")}if(e===null){m("Your browser does not support XMLHTTP")}return e}var r={};t=t instanceof Array?t:[t];var i=t.length;for(var s=0;s<t.length;s++){var o=t[s].replace(/\s+/g,""),u=o.lastIndexOf("<");if(u>2){var a=o.substr(0,u),f=o.substr(u+1);lazy.load(f,function(){lazy.load(a)})}else if(o.indexOf(",")>0){lazy.load(o.split(","))}else if(typeof e[o]==="undefined"&&l(o)){h(o)}v()}}}}()
